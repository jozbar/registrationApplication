{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/helpers/error.interceptor.ts","webpack:///./src/app/helpers/index.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/index.ts","webpack:///./src/app/register/index.ts","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/services/index.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!-- main content container -->\\n<div class=\\\"jumbotron\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-8 offset-sm-2\\\">\\n                <router-outlet></router-outlet>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({ selector: 'app', templateUrl: 'app.component.html' })\nexport class AppComponent {\n    currentUser: any;\n\n    constructor(\n    ) {\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { appRoutingModule } from './app.routing';\nimport { ErrorInterceptor } from './helpers';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home';\nimport { RegisterComponent } from './register';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        appRoutingModule\n    ],\n    declarations: [\n        AppComponent,\n        HomeComponent,\n        RegisterComponent\n    ],\n    providers: [\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home';\nimport { RegisterComponent } from './register';\n\nconst routes: Routes = [\n    { path: '', component: HomeComponent},\n    { path: 'register', component: RegisterComponent },\n    { path: '**', redirectTo: '' }\n];\n\nexport const appRoutingModule = RouterModule.forRoot(routes);\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            const errors = err.error.errors || err.statusText;\r\n            return throwError(errors);\r\n        }))\r\n    }\r\n}\r\n","export * from './error.interceptor';\r\n","module.exports = \"<div *ngIf=\\\"error\\\" class=\\\"alert alert-danger\\\">{{error}}</div>\\r\\n<div *ngIf=\\\"success\\\" class=\\\"alert alert-success\\\">{{success}}</div>\\r\\n\\r\\n<h2>Registration App</h2><br/>\\r\\n<h3>All registered users:</h3>\\r\\n<ul><li *ngFor=\\\"let user of users\\\"> {{user.username}} </li> </ul>\\r\\n\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n    <button class = \\\"btn btn-primary\\\" routerLink=\\\"/register\\\">Register new User </button>\\r\\n    <!--<a routerLink=\\\"/register\\\" class=\\\"btn btn-link\\\">Register new User</a>-->\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {UserService} from \"../services\";\nimport {first} from \"rxjs/operators\";\nimport {User} from \"../model/user.model\";\n\n@Component({ templateUrl: 'home.component.html' })\nexport class HomeComponent {\n\n    returnUrl: string;\n    error: string;\n    success: string;\n    users: User[];\n// users =[];\n\n    constructor(\n        private route: ActivatedRoute,\n        private userService: UserService\n    ) {}\n\n    ngOnInit() {\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n\n        // show success message on registration\n        if (this.route.snapshot.queryParams['registered']) {\n            debugger;\n            this.success= 'Succesfully registered new user: ' + this.route.snapshot.queryParams['username'];\n        }\n\n        this.loadAllUsers();\n    }\n\n    private loadAllUsers() {\n        this.userService.getAll()\n            // .pipe(first())\n            .subscribe(users => {debugger;\n                this.users = users});\n    }\n}\n","export * from './home.component';","export * from './register.component';","module.exports = \"<div *ngFor=\\\"let error of errors\\\" class=\\\"alert alert-danger\\\">{{error}}</div>\\n<!--<div *ngIf=\\\"error\\\" class=\\\"alert alert-danger\\\">{{error}}</div>-->\\n<h2>Register</h2>\\n<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" />\\n        <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\n            <div *ngIf=\\\"f.username.errors.minlength\\\">Username must be at least 5 characters</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n        <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n            <div *ngIf=\\\"f.password.errors.minlength\\\">Password must be at least 8 characters</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\n            <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n            Register\\n        </button>\\n        <a routerLink=\\\"/login\\\" class=\\\"btn btn-link\\\">Cancel</a>\\n    </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { UserService } from '../services';\n\n@Component({ templateUrl: 'register.component.html' })\nexport class RegisterComponent implements OnInit {\n    registerForm: FormGroup;\n    loading = false;\n    submitted = false;\n    errors: string[];\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private userService: UserService\n    ) {}\n\n    ngOnInit() {\n        this.registerForm = this.formBuilder.group({\n            username: ['', [Validators.required, Validators.minLength(5)]],\n            password: ['', [Validators.required, Validators.minLength(8)]]\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.registerForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        if (this.registerForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.userService.register(this.registerForm.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    debugger;\n                    this.router.navigate(['/'], { queryParams: { registered: true, username: data.username }});\n                },\n                error => {\n                    debugger;\n                    this.errors = error;\n                    this.loading = false;\n                });\n    }\n}\n","export * from './user.service';","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {User} from \"../model/user.model\";\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n    constructor(private http: HttpClient) { }\n    baseUrl: string = 'http://localhost:8080/users/';\n\n    getAll() {\n        return this.http.get<any[]>(this.baseUrl);\n    }\n\n    register(user: User){\n        return this.http.post<User>(this.baseUrl + 'register/', user);\n    }\n\n    delete(id) {\n        return this.http.delete(`${config.apiUrl}/users/${id}`);\n    }\n\n    findByUsername(username : string) {\n        return this.http.get(`${config.apiUrl}/users/${username}`);\n    }\n\n    findById(id : number) {\n        return this.http.get(`${config.apiUrl}/users/${id}`);\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n"],"sourceRoot":""}